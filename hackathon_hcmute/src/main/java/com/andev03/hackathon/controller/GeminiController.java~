package com.andev03.hackathon.controller;

import com.andev03.hackathon.dto.AskQuestionRequestDto;
import com.andev03.hackathon.dto.ResultDto;
import com.andev03.hackathon.pojo.Result;
import com.andev03.hackathon.repository.AccountRepository;
import com.andev03.hackathon.service.IQnAService;
import com.fasterxml.jackson.core.JsonProcessingException;
import com.fasterxml.jackson.databind.JsonNode;
import com.fasterxml.jackson.databind.ObjectMapper;
import lombok.AllArgsConstructor;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.*;

import java.util.Map;

@RestController
@AllArgsConstructor
@RequestMapping("/api/qna")
@CrossOrigin(origins = "https://hackathon.nguyenhoangan.site")
public class GeminiController {

    private final IQnAService qnAService;

    private final AccountRepository accountRepository;

    @PostMapping("/ask")
    public ResponseEntity<String> askQuestion(@RequestBody AskQuestionRequestDto askQuestionRequestDto) throws JsonProcessingException {
        String answer = qnAService.getAnswer(askQuestionRequestDto);
        ObjectMapper mapper = new ObjectMapper();

        JsonNode root = mapper.readTree(answer);
        String text = root
                .path("candidates").get(0)
                .path("content")
                .path("parts").get(0)
                .path("text")
                .asText();
        if (accountRepository.findByUsername(askQuestionRequestDto.getUsername()).isPresent()) {
            ResultDto tmp = new ResultDto(askQuestionRequestDto.getUsername(), text);
            qnAService.save(tmp);
        }

        return ResponseEntity.ok(answer);
    }
}
